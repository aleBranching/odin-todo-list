(()=>{"use strict";class e{static loadAddProject(){function e(e,t){const n=document.createElement("button"),c=document.createElement("span");c.classList="material-symbols-outlined",c.textContent=e;const a=document.createTextNode(t);return n.appendChild(c),n.appendChild(a),n.id=`form${t}`,n.addEventListener("click",(e=>{e.preventDefault()})),n}const t=document.createElement("form");t.id="addProjectForm";const n=document.createElement("label");n.setAttribute("for","projectName"),n.innerText="Name:";const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("name","projectName"),c.setAttribute("id","projectName"),c.required=!0,console.log(c);const a=document.createElement("div");return a.classList="buttons",a.appendChild(e("done","Submit")),a.appendChild(e("cancel","Cancel")),t.appendChild(n),t.appendChild(c),t.appendChild(a),t}static returnProjectItem(e){const t=document.createElement("div");return t.textContent=e,t}static returnAddProjectBTN(){const e=document.createElement("div");return e.textContent="+ Add project",e.id="projectAdder",e}}class t{static createTask(e,t){const n=document.createElement("div");n.classList="task";const c=document.createElement("div");c.classList="taskInfo";const a=document.createElement("input");a.setAttribute("type","checkbox"),a.setAttribute("name","finishedTask"),a.setAttribute("id","finishedTask");const r=document.createElement("input");r.setAttribute("type","date"),r.value=e;const o=document.createElement("div");o.classList="noteText",o.textContent=t,c.appendChild(a),c.appendChild(r),c.appendChild(o),n.appendChild(c);const s=document.createElement("div");s.classList="functions";const d=document.createElement("span");d.classList="material-symbols-outlined edit",d.textContent="edit";const l=document.createElement("span");return l.textContent="delete",l.classList="material-symbols-outlined delete",s.appendChild(d),s.appendChild(l),n.appendChild(s),n}static createAddTask(){const e=document.createElement("div");return e.classList="addTask",e.textContent="+ Add Task",e}static createTaskForm(){const e=document.createElement("div");e.classList="addTaskForm",e.innerHTML='\n    <form action="">\n      <div>\n        <label for="date">Date:</label>\n        <input type="date" name="taskDate" id="taskDate" />\n        <label for="Task">Task:</label>\n        <input type="text" name="taskText" id="taskText" />\n      </div>\n      <div class="taskFormButtons">\n        <button id="formSubmit">\n          <span class="material-symbols-outlined">done</span>Submit\n        </button>\n        <button id="formCancel">\n          <span class="material-symbols-outlined">cancel</span>Cancel\n        </button>\n      </div>\n    </form>\n  ';const t=e.querySelector("#formSubmit"),n=e.querySelector("#formCancel");return t.addEventListener("click",(e=>{e.preventDefault()})),n.addEventListener("click",(e=>{e.preventDefault()})),e}}(class{static loadPage(){this.addProjectListener(),this.addTaskListener()}static createHeader(){const e=document.createElement("div");return e.classList="header",e}static createFooter(){const e=document.createElement("div");return e.classList="footer",e}static formBTNS(){const t=document.querySelector("#formSubmit"),n=document.querySelector("#formCancel"),c=document.querySelector("#projectName"),a=document.querySelector("#addProjectForm");c.focus(),t.addEventListener("click",(t=>{if(t.preventDefault(),""!==c.value){console.log(c.value),c.textContent="",a.replaceWith(e.returnAddProjectBTN()),this.addProjectListener();const t=document.querySelector("div#projectAdder");console.log(t),t.before(e.returnProjectItem(c.value))}})),n.addEventListener("click",(t=>{t.preventDefault(),console.log("test"),a.replaceWith(e.returnAddProjectBTN()),this.addProjectListener()}))}static addProjectListener(){const t=document.querySelector("#projectAdder");t.addEventListener("click",(()=>{t.replaceWith(e.loadAddProject()),this.formBTNS()}))}static formTaskListener(){const e=document.querySelector("#formSubmit"),n=document.querySelector("#formCancel"),c=document.querySelector("#taskDate"),a=document.querySelector(".addTaskForm"),r=document.querySelector("#taskText");e.addEventListener("click",(e=>{if(console.log("zzzz"),e.preventDefault(),""!==c.value&&""!==c.value){const e=c.value,n=r.value;a.replaceWith(t.createAddTask()),document.querySelector(".addTask").before(t.createTask(e,n)),this.addTaskListener()}})),console.log(e),n.addEventListener("click",(e=>{e.preventDefault(),a.replaceWith(t.createAddTask()),this.addTaskListener()}))}static addTaskListener(){const e=document.querySelector(".addTask");e.addEventListener("click",(n=>{n.preventDefault(),e.replaceWith(t.createTaskForm()),this.formTaskListener()}))}}).loadPage(),console.log("test");const n=document.querySelector(".header");console.log(n)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,